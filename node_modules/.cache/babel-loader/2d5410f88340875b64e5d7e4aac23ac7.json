{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-starwars-datatable-hooks/src/components/Provider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction Provider({\n  children\n}) {\n  const STARWARS_BASE_API = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const [data, setData] = useState([]);\n  const [inputName, setInputName] = useState('');\n  const [inputNumbers, setInputNumbers] = useState([]);\n  const [filterdPlanets, setFilteredPlanets] = useState([]);\n  useEffect(() => {\n    const getPostsByStarWars = async () => {\n      await fetch(`${STARWARS_BASE_API}`).then(res => res.json()).then(json => setData(json));\n    };\n\n    getPostsByStarWars();\n  }, []);\n  useEffect(() => {\n    const filter = data.filter(({\n      name\n    }) => name.includes(inputName));\n    setFilteredPlanets(filter);\n  }, [data, inputName]);\n  useEffect(() => {\n    const zero = 0;\n\n    if (inputNumbers.length > zero) {\n      inputNumbers.map(({\n        column: filterColumn,\n        comparison: filterComparison,\n        number: filterNumber\n      }) => {\n        if (filterComparison === 'maior que') {\n          setFilteredPlanets([...data.filter(planet => planet[filterColumn] > filterNumber)]);\n        }\n\n        if (filterComparison === 'menor que') {\n          setFilteredPlanets([...data.filter(planet => planet[filterColumn] < filterNumber)]);\n        }\n\n        if (filterComparison === 'igual a') {\n          setFilteredPlanets([...data.filter(planet => Number(planet[filterColumn]) === filterNumber)]);\n        }\n\n        return data;\n      });\n    }\n  }, [data, inputNumbers, setFilteredPlanets]);\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: {\n      data,\n      inputName,\n      setInputName,\n      filterdPlanets,\n      inputNumbers,\n      setInputNumbers,\n      setFilteredPlanets\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nStarWarsContextProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default StarWarsContextProvider;","map":{"version":3,"sources":["/home/eric/sd-07-project-starwars-datatable-hooks/src/components/Provider.js"],"names":["React","useState","useEffect","PropTypes","StarWarsContext","Provider","children","STARWARS_BASE_API","data","setData","inputName","setInputName","inputNumbers","setInputNumbers","filterdPlanets","setFilteredPlanets","getPostsByStarWars","fetch","then","res","json","filter","name","includes","zero","length","map","column","filterColumn","comparison","filterComparison","number","filterNumber","planet","Number","StarWarsContextProvider","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction Provider({ children }) {\n  const STARWARS_BASE_API = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const [data, setData] = useState([]);\n  const [inputName, setInputName] = useState('');\n  const [inputNumbers, setInputNumbers] = useState([]);\n  const [filterdPlanets, setFilteredPlanets] = useState([]);\n\n  useEffect(() => {\n    const getPostsByStarWars = async () => {\n      await fetch(`${STARWARS_BASE_API}`)\n        .then((res) => res.json())\n        .then((json) => setData(json));\n    };\n    getPostsByStarWars();\n  }, []);\n\n  useEffect(() => {\n    const filter = data\n      .filter(({ name }) => name.includes(inputName));\n    setFilteredPlanets(filter);\n  }, [data, inputName]);\n\n  useEffect(() => {\n    const zero = 0;\n    if (inputNumbers.length > zero) {\n      inputNumbers.map(({\n        column: filterColumn,\n        comparison: filterComparison,\n        number: filterNumber }) => {\n        if (filterComparison === 'maior que') {\n          setFilteredPlanets([...data.filter(\n            (planet) => planet[filterColumn] > filterNumber,\n          )]);\n        }\n        if (filterComparison === 'menor que') {\n          setFilteredPlanets([...data.filter(\n            (planet) => planet[filterColumn] < filterNumber,\n          )]);\n        }\n\n        if (filterComparison === 'igual a') {\n          setFilteredPlanets([...data.filter(\n            (planet) => Number(planet[filterColumn]) === filterNumber,\n          )]);\n        }\n        return data;\n      });\n    }\n  }, [data, inputNumbers, setFilteredPlanets]);\n\n  return (\n    <StarWarsContext.Provider\n      value={ {\n        data,\n        inputName,\n        setInputName,\n        filterdPlanets,\n        inputNumbers,\n        setInputNumbers,\n        setFilteredPlanets,\n      } }\n    >\n      {children}\n    </StarWarsContext.Provider>\n  );\n}\n\nStarWarsContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default StarWarsContextProvider;\n"]},"metadata":{},"sourceType":"module"}